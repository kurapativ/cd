{
	"AWSTemplateFormatVersion": "2010-09-09",

	"Description": "AWS CloudFormation Sample Template vpc_single_instance_in_subnet.template: Sample template showing how to create a VPC and add an EC2 instance with an Elastic IP address and a security group. **WARNING** This template creates an Amazon EC2 instance. You will be billed for the AWS resources used if you create a stack from this template.",

	"Parameters": {

		"InstanceType": {
			"Description": "WebServer EC2 instance type",
			"Type": "String",
			"Default": "m1.medium",
			"ConstraintDescription": "must be a valid EC2 instance type."
		},

		"KeyName": {
			"Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
			"Type": "String",
			"Default": "dfad"

		},
		"ImageID": {
			"Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
			"Type": "String",
			"Default": "ami-12345"

		},
		"InstanceSecurityGroup": {
			"Description": " The IP address range that can be used to SSH to the EC2 instances",
			"Type": "AWS::EC2::SecurityGroup::Id",
			"Default": "sg-12345"
		},
		"SubnetId": {
			"Description": " The IP address range that can be used to SSH to the EC2 instances",
			"Type": "AWS::EC2::Subnet::Id",
			"Default": "subnet-12345"
		}

	},
	"Resources": {
		"testInstance": {
			"Type": "AWS::EC2::Instance",
			"Properties": {
				"ImageId": {
					"Ref": "ImageID"
				},

				"SecurityGroupIds": [{
					"Ref": "InstanceSecurityGroup"
				}],
				"SubnetId": {
					"Ref": "SubnetId"
				},
				"InstanceType": {
					"Ref": "InstanceType"
				},
				"KeyName": {
					"Ref": "KeyName"
				},
				"UserData": {
					"Fn::Base64": {
						"Fn::Join": ["", [
							"#!/bin/bash -v\n",
							"echo 'env=::env::\n",
							"cmp=::cmp::' > /tmp/envdata\n",
							"sudo yum -y install wget\n",
							"sudo sed -i \"s#Defaults.*requiretty#Defaults\\!requiretty#g\" /etc/sudoers\n",
                                                        "sudo cd /tmp\n",
							"sudo echo 'Downloading the rpm'\n",
							"sudo wget https://packages.chef.io/files/current/chef/13.4.18/el/7/chef-13.4.18-1.el7.x86_64.rpm\n",
							"sudo rpm -ivh *.rpm\n",
							"sudo mkdir /etc/chef\n",
							"cd /etc/chef\n",
							"wget https://s3-us-west-2.amazonaws.com/cdchefdocs/client.rb\n",
							"wget https://s3-us-west-2.amazonaws.com/cdchefdocs/knife.rb\n",
							"wget https://s3-us-west-2.amazonaws.com/cdchefdocs/vidya1709.pem\n",
							"sudo chmod 400 vidya1709.pem\n",
							"sudo chef-client -o recipe[test::docs_example]\n",
							"cd /opt/tomcat_docs/webapps\n",
							"sudo wget http://34.214.102.11:8081/nexus/service/local/repositories/releases/content/com/mkyong/CounterWebApp/1.0/CounterWebApp-1.0.war\n",
							"sudo cd /tomcat_docs/bin\n",
							"./shutdown.sh\n",
							"./startup.sh\n",
							"/opt/aws/bin/cfn-signal -e 0 -r \"ChefClient setup complete\" '", {
							"Ref": "WaitHandle"
							}, "'\n"

						]]
					}
				}
			}
		},
		"WaitHandle": {
			"Type": "AWS::CloudFormation::WaitConditionHandle"
		}
	},
    "Outputs": {
        "InstanceId": {
            "Description": "InstanceId of the newly created EC2 instance",
            "Value": {
                "Ref": "testInstance"
            }
        },
        "AZ": {
            "Description": "Availability Zone of the newly created EC2 instance",
            "Value": {
                "Fn::GetAtt": [
                    "testInstance",
                    "AvailabilityZone"
                ]
            }
        },
        "PublicDNS": {
            "Description": "Public DNSName of the newly created EC2 instance",
            "Value": {
                "Fn::GetAtt": [
                    "testInstance",
                    "PublicDnsName"
                ]
            }
        },
        "PublicIP": {
            "Description": "Public IP address of the newly created EC2 instance",
            "Value": {
                "Fn::GetAtt": [
                    "testInstance",
                    "PublicIp"
                ]
            }
        }
    }
}
